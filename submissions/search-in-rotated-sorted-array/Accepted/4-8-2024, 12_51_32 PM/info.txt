{"id":1226484216,"question_id":33,"lang":"java","lang_name":"Java","time":"1 week, 1 day","timestamp":1712560892,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1226484216/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"41.3 MB","code":"class Solution {\n    public int search(int[] nums, int target) {\n        int left = 0;\n        int n = nums.length;\n        int right = n - 1;\n        \n        while (left <= right) {\n            int mid = (left + (right - left) / 2);\n            \n            if (nums[mid] == target)\n                return mid;\n            \n            // Check if the left half is sorted\n            if (nums[left] <= nums[mid]) {\n                if (target >= nums[left] && target < nums[mid])\n                    right = mid - 1; // Search in the left half\n                else\n                    left = mid + 1; // Search in the right half\n            } \n            // Right half is sorted\n            else {\n                if (target > nums[mid] && target <= nums[right])\n                    left = mid + 1; // Search in the right half\n                else\n                    right = mid - 1; // Search in the left half\n            }\n        }\n        return -1; // Not found\n    }\n}\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-in-rotated-sorted-array","has_notes":true,"flag_type":1}
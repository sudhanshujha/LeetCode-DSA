{"id":1194411406,"question_id":735,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1709624012,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1194411406/","is_pending":"Not Pending","title":"Asteroid Collision","memory":"N/A","code":"import java.util.*;\n\nclass Solution {\n    public int[] asteroidCollision(int[] asteroids) {\n        // Note: direction (positive meaning right, negative meaning left) so if all -ve are in left & +ve in right no collision\n        // Convert int[] array to ArrayList<Integer>\n        List<Integer> a = new ArrayList<>();\n        for (int asteroid : asteroids) {\n            a.add(asteroid);\n        }\n        \n        int n = a.size();\n        for (int i = n - 1; i > 0; i--) {\n            // if same sign then no collision will occur\n            if (a.get(i) * a.get(i - 1) > 0) {\n                continue;\n            } else if ((a.get(i) + a.get(i - 1) == 0) && a.get(i) < 0) { // opp sign, right negative & equal both destroyed\n                a.remove(i);\n                a.remove(i - 1);\n            } else if ((a.get(i) + a.get(i - 1) == 0) && a.get(i) > 0){\n                continue;\n            } \n            else { // opp sign & unequal -> abs bigger one will survive\n                if (Math.abs(a.get(i)) > Math.abs(a.get(i - 1))) {\n                    a.remove(i - 1);\n                } else {\n                    a.remove(i);\n                }\n            }\n        }\n        \n        // Convert ArrayList to int[] using Java streams\n        return a.stream().mapToInt(Integer::intValue).toArray();\n    }\n}\n","compare_result":"11111101111010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"asteroid-collision","has_notes":false,"flag_type":1}
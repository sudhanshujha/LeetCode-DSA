{"id":1194344912,"question_id":735,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1709619290,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1194344912/","is_pending":"Not Pending","title":"Asteroid Collision","memory":"N/A","code":"import java.util.Stack;\n\nclass Solution {\n    public int[] asteroidCollision(int[] asteroids) {\n        Stack<Integer> stack = new Stack<>();\n        int n = asteroids.length;\n        stack.push(asteroids[0]);\n        int i = 1;\n        while (i < n) {\n            if (stack.isEmpty() || asteroids[i] * stack.peek() > 0 || (asteroids[i] > 0 && stack.peek() < 0)) {\n                stack.push(asteroids[i]);\n            } else {\n                while (!stack.isEmpty() && asteroids[i] * stack.peek() < 0 && stack.peek() > 0) {\n                    int top = stack.pop();\n                    if (Math.abs(top) == Math.abs(asteroids[i])) {\n                        i++;\n                    } else if (Math.abs(top) > Math.abs(asteroids[i])) {\n                        // No collision, continue to next asteroid\n                    } else {\n                        // The current asteroid gets destroyed, check with the next asteroid\n                        continue;\n                    }\n                }\n            }\n            i++;\n        }\n        \n        // Convert stack to array\n        int[] result = new int[stack.size()];\n        for (int j = stack.size() - 1; j >= 0; j--) {\n            result[j] = stack.pop();\n        }\n        \n        return result;\n    }\n}","compare_result":"01011111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"asteroid-collision","has_notes":false,"flag_type":1}
{"id":1156807330,"question_id":904,"lang":"java","lang_name":"Java","time":"2 months, 3 weeks","timestamp":1706212916,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1156807330/","is_pending":"Not Pending","title":"Leaf-Similar Trees","memory":"42.8 MB","code":"public class Solution {\n    public boolean leafSimilar(TreeNode root1, TreeNode root2) {\n        List<Integer> arr1 = new ArrayList<>();\n        arr1.addAll(Arrays.asList(inOrder(root1)));\n        List<Integer> arr2 = new ArrayList<>();\n        arr2.addAll(Arrays.asList(inOrder(root2)));\n        return arr1.equals(arr2);\n    }\n\n    public Integer[] inOrder(TreeNode node) {\n        List<Integer> arr = new ArrayList<>();\n        if (node == null)\n            return arr.toArray(new Integer[0]); // Convert ArrayList to Integer[] using toArray\n        if ((node.left == null) && (node.right == null)) {\n            arr.add(node.val);\n        }\n        arr.addAll(Arrays.asList(inOrder(node.left)));\n        arr.addAll(Arrays.asList(inOrder(node.right)));\n        return arr.toArray(new Integer[0]); // Convert ArrayList to Integer[] using toArray\n    }\n    }","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"leaf-similar-trees","has_notes":false,"flag_type":1}
{"id":1191324838,"question_id":11,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1709367322,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1191324838/","is_pending":"Not Pending","title":"Container With Most Water","memory":"57.9 MB","code":"class Solution {\n    //Two pointer system\n    public int maxArea(int[] height) {\n        //Start our pointers\n        int left = 0;\n        int right = height.length-1;\n        \n        //Start looping until we find the max \n        int maxArea  = 0;\n        int currArea = 0;\n        while(left<right){\n            //Current Area is the minimum of the heights multiplied\n            //by the horizontal distance\n            currArea = (right-left)*Math.min(height[left],height[right]);\n            maxArea = Math.max(maxArea, currArea);\n            \n            //try to maximize the area by increasing\n            //left if its the one thats lower\n            //or right if thats the one.\n            if(height[left] < height[right]){\n                left++;\n            } else{\n                right--;\n            }\n        }\n        \n        return maxArea;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"container-with-most-water","has_notes":false,"flag_type":1}
{"id":1222975889,"question_id":2610,"lang":"java","lang_name":"Java","time":"1 week, 4 days","timestamp":1712226808,"status":10,"status_display":"Accepted","runtime":"92 ms","url":"/submissions/detail/1222975889/","is_pending":"Not Pending","title":"Closest Prime Numbers in Range","memory":"50 MB","code":"class Solution {\n    public int[] closestPrimes(int left, int right) {\n        boolean[] IsPrime = new boolean[right+1];\n        Arrays.fill(IsPrime, true);\n        IsPrime[0]=IsPrime[1]=false;\n\n        int min = Integer.MAX_VALUE;\n        //finding prime numbers in range [2,right];\n        findPrimes(right,IsPrime);\n        \n        //storing prime numbers in range[left,right] in list\n        ArrayList<Integer> primes = new ArrayList<>();\n        for(int i=left;i<=right;i++)\n        {\n            if(IsPrime[i])\n                primes.add(i);\n        }\n      \n        int[] res=null;\n        //finding two prime numbers with smallest absolute difference\n        for(int i=0;i<primes.size()-1;i++)\n        {\n            if(primes.get(i+1)-primes.get(i)<min)\n            {\n                min=primes.get(i+1)-primes.get(i);\n                res=new int[]{primes.get(i),primes.get(i+1)};\n            }\n        }\n        //if no result found return [-1,-1]\n        return res==null? new int[]{-1,-1}:res;\n    }\n    \n    private void findPrimes(int n,boolean[] IsPrime)\n    {\n       for(int i = 2; i*i<=n; i++){\n           if(IsPrime[i]){\n               for(int j=i*i; j<=n; j+=i)\n                   IsPrime[j] = false;\n           }\n       }  \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"closest-prime-numbers-in-range","has_notes":false,"flag_type":1}
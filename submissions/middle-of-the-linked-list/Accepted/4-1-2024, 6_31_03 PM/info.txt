{"id":1220088753,"question_id":908,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1711976463,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1220088753/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"40.7 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode middleNode(ListNode head) {\n        ListNode slow = head;\n        ListNode fast = head;\n\n        while (fast != null && fast.next != null) {\n            slow = slow.next; // Move slow by one step\n            fast = fast.next.next; // Move fast by two steps\n        }\n\n        // Return the middle node (or the second middle node if the number of nodes is even)\n        return slow;\n    }\n}","compare_result":"111111111111111111111111111111111111","title_slug":"middle-of-the-linked-list","has_notes":true,"flag_type":1}
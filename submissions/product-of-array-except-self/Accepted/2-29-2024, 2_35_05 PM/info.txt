{"id":1189522445,"question_id":238,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1709197505,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1189522445/","is_pending":"Not Pending","title":"Product of Array Except Self","memory":"54.5 MB","code":"// O(n) time\n// O(1) extra space complexity\n// Division not allowed as product/(nums[i]) will give java.lang.ArithmeticException: / by zero\n// O(n^2) Calc left & right side product & store it in answer[i]\n\n// prefix & suffix product \n// pre[i] = pre[i - 1] * a[i - 1] and similarly suff[i] = suff[i + 1] * a[i + 1].\n\nclass Solution {\n    public int[] productExceptSelf(int[] nums) {\n        int n = nums.length;\n        int pre[] = new int[n];\n        int suff[] = new int[n];\n        pre[0] = 1;\n        suff[n - 1] = 1;\n        \n        for(int i = 1; i < n; i++) {\n            pre[i] = pre[i - 1] * nums[i - 1];\n        }\n        for(int i = n - 2; i >= 0; i--) {\n            suff[i] = suff[i + 1] * nums[i + 1];\n        }\n        \n        int ans[] = new int[n];\n        for(int i = 0; i < n; i++) {\n            ans[i] = pre[i] * suff[i];\n        }\n        return ans;\n    }\n}","compare_result":"1111111111111111111111","title_slug":"product-of-array-except-self","has_notes":false,"flag_type":1}
{"id":1193596035,"question_id":1,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1709558393,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1193596035/","is_pending":"Not Pending","title":"Two Sum","memory":"45 MB","code":"/*class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        int n = nums.length;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (nums[i] + nums[j] == target) {\n                    return new int[] { i, j }; // Return directly with the indices\n                }\n            }\n        }\n        // If no valid pair is found, return an empty array\n        return new int[0];\n    }\n}*/\n\nclass Solution {\n    public int[] twoSum(int[] nums, int target) {\n        HashMap<Integer, Integer> map = new HashMap<>();\n        int n = nums.length;\n        for (int i = 0; i < n; i++) {\n            if (map.containsKey(target - nums[i])) {\n                return new int[] { map.get(target - nums[i]), i };\n            } else {\n                map.put(nums[i], i);\n            }\n        }\n        // If no valid pair is found, return an empty array\n        return new int[0];\n    }\n}\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"two-sum","has_notes":false,"flag_type":1}
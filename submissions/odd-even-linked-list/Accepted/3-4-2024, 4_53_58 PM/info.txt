{"id":1193519755,"question_id":328,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1709551438,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1193519755/","is_pending":"Not Pending","title":"Odd Even Linked List","memory":"44.3 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode oddEvenList(ListNode head) {\n        if (head == null || head.next == null) {\n            return head; // No need to rearrange if the list has 0 or 1 node\n        }\n        \n        ListNode oddHead = head;\n        ListNode evenHead = head.next;\n        ListNode odd = oddHead;\n        ListNode even = evenHead;\n\n        // Traverse the list and rearrange nodes\n        while (even != null && even.next != null) {\n            odd.next = even.next; // Link odd node to the next odd node\n            odd = odd.next; // Move odd pointer to the next odd node\n            even.next = odd.next; // Link even node to the next even node\n            even = even.next; // Move even pointer to the next even node\n        }\n\n        // Link the last odd node to the first even node\n        odd.next = evenHead;\n\n        return oddHead;\n    }\n}\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"odd-even-linked-list","has_notes":false,"flag_type":1}
{"id":1199662393,"question_id":437,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1710081198,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1199662393/","is_pending":"Not Pending","title":"Path Sum III","memory":"N/A","code":"class Solution {\n    public int pathSum(TreeNode root, int targetSum) {\n        if (root == null) {\n            return 0;\n        }\n        \n        return dfs(root, targetSum) + \n        pathSum(root.left, targetSum) + pathSum(root.right, targetSum);\n    }\n    \n    private int dfs(TreeNode node, int targetSum) {\n        if (node == null) {\n            return 0;\n        }\n        \n        int count = 0;\n        if (node.val == targetSum) {\n            count++;\n        }\n        \n        // Recursively explore paths in the left and right subtrees\n        count += dfs(node.left, targetSum - node.val);\n        count += dfs(node.right, targetSum - node.val);\n        \n        return count;\n    }\n}\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110","title_slug":"path-sum-iii","has_notes":false,"flag_type":1}
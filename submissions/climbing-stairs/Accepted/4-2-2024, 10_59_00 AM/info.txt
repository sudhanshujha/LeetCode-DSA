{"id":1220804698,"question_id":70,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1712035740,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1220804698/","is_pending":"Not Pending","title":"Climbing Stairs","memory":"40.3 MB","code":"class Solution {\n    public int climbStairs(int n) {\n        Map<Integer, Integer> memo = new HashMap<>();\n        return climbStairs(n, memo);\n    }\n    \n    private int climbStairs(int n, Map<Integer, Integer> memo) {\n        if (n == 0 || n == 1) {\n            return 1;\n        }\n        if (!memo.containsKey(n)) {\n            memo.put(n, climbStairs(n-1, memo) + climbStairs(n-2, memo));\n        }\n        return memo.get(n);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111","title_slug":"climbing-stairs","has_notes":false,"flag_type":1}
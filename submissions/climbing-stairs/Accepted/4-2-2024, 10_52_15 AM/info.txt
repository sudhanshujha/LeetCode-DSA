{"id":1220798780,"question_id":70,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1712035335,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1220798780/","is_pending":"Not Pending","title":"Climbing Stairs","memory":"39.8 MB","code":"class Solution {\n    public int climbStairs(int n) {\n        // 1 -> n=1, [1]\n        // 2 -> n=2, [1,1], [2]\n        // 3 -> n=3, [1,1,1],[1,2]*2\n        // 5 -> n=4, [1,1,1,1],[2,1,1]*3,[2,2]\n        // 8 -> n=5, [1,1,1,1,1],[2,1,1,1]*4,[2,2,1]*3\n        int a = 1, b = 2, temp;\n        if (n==1)   return a;\n        if (n==2)   return b;\n        for (int i = 3; i <= n; i++){\n            temp = b;\n            b = a + b;\n            a = temp;\n        }\n        return b;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111","title_slug":"climbing-stairs","has_notes":false,"flag_type":1}
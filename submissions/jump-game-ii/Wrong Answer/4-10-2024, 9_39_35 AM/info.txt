{"id":1228207384,"question_id":45,"lang":"java","lang_name":"Java","time":"6 days, 5 hours","timestamp":1712722175,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1228207384/","is_pending":"Not Pending","title":"Jump Game II","memory":"N/A","code":"class Solution {\n    public int jump(int[] nums) {\n        int step = 0, maxReach = 0, currJump = 0, n = nums.length;\n        if(n==1) return 0;\n        // for each find when we reach end\n        for(int i=0; i<n; i++){\n            if(maxReach < i+nums[i]){\n                maxReach = Math.max(maxReach, i+nums[i]);\n                step = step + 1;\n            }    \n            if(maxReach >= n-1) return step;\n        }\n        return step;\n    }\n}","compare_result":"1111111111111111111111111111111111110000101111111110010110110100000000000000000000000000000000100000001100111","title_slug":"jump-game-ii","has_notes":false,"flag_type":1}
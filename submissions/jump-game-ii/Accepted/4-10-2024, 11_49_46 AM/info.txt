{"id":1228290851,"question_id":45,"lang":"java","lang_name":"Java","time":"6 days, 3 hours","timestamp":1712729986,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1228290851/","is_pending":"Not Pending","title":"Jump Game II","memory":"44.8 MB","code":"class Solution {\n    public int jump(int[] A) {\n\tint jumps = 0, curEnd = 0, curFarthest = 0;\n    // implicit BFS\n\tfor (int i = 0; i < A.length - 1; i++) {\n\t\tcurFarthest = Math.max(curFarthest, i + A[i]);\n\t\t// Visited all the items on the current level\n        // Increment the level\n        // Make the queue size for the next level\n      \n        if (i == curEnd) {\n\t\t\tjumps++;\n\t\t\tcurEnd = curFarthest;\n\t\t}\n\t}\n\treturn jumps;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"jump-game-ii","has_notes":false,"flag_type":1}
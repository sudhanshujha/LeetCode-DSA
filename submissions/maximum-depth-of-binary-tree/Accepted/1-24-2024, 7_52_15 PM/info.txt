{"id":1155596424,"question_id":104,"lang":"java","lang_name":"Java","time":"2 months, 3 weeks","timestamp":1706106135,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1155596424/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"41.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int maxDepth(TreeNode root) {\n        if (root == null)\n            return 0;\n        return postOrder(root);\n    }\n\t\tpublic static int postOrder(TreeNode root) {\n\t\t\t\tif((root == null)) // node next to leaf\n\t\t\t\t\t\treturn 0;\n\t\t\treturn 1 + Math.max(postOrder(root.left), postOrder(root.right));\n\t\t\t//sout(root.data);\n\t\t\n    }\n\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree","has_notes":false,"flag_type":1}
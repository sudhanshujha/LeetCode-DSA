{"id":1195684379,"question_id":2392,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1709727304,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1195684379/","is_pending":"Not Pending","title":"Successful Pairs of Spells and Potions","memory":"N/A","code":"import java.util.Arrays;\n\nclass Solution {\n    public int[] successfulPairs(int[] spells, int[] potions, long success) {\n        Arrays.sort(potions); // Sort the potions array\n        \n        for (int i = 0; i < spells.length; i++) {\n            int target = (int) Math.ceil((double) success / spells[i]); \n            // Round up to ensure we get at least the required strength\n            \n            int left = 0;\n            int right = potions.length - 1;\n            int count = 0;\n            \n            // Two Pointers technique to find the number of successful potions\n            while (left < potions.length && right >= 0) {\n                if ((long) spells[i] * potions[left] >= success) {\n                    count += potions.length - left; // All remaining potions form successful pairs\n                    break;\n                } else if ((long) spells[i] * potions[right] < success) {\n                    break; // No potion forms a successful pair\n                } else {\n                    left++; // Increment left pointer\n                    right--; // Decrement right pointer\n                }\n            }\n            \n            spells[i] = count;\n        }\n        \n        return spells;\n    }\n}\n","compare_result":"11011001111011111111111010000000000000000000000000000110","title_slug":"successful-pairs-of-spells-and-potions","has_notes":false,"flag_type":1}
{"id":1196054866,"question_id":643,"lang":"java","lang_name":"Java","time":"1Â month, 1Â week","timestamp":1709753786,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1196054866/","is_pending":"Not Pending","title":"Maximum Average Subarray I","memory":"N/A","code":"class Solution {\n    public double findMaxAverage(int[] nums, int k) {\n        int n = nums.length;\n        if(k>n) return 0;\n        if(k==n && n==1) return nums[0]/k;\n        double sum = 0;\n        for(int i=0; i<k; i++){\n            sum += nums[i];\n        } \n        int j=k-1;\n        int i=0;\n        while(j<n-1)\n            {\n                j++;\n                i++;\n                sum = Math.max(sum,sum+nums[j]-nums[i-1]);\n            }\n        \n        return (double)sum/k;       \n    }\n}","compare_result":"1111111111010111011010100000000000000000000000000000000000000000000000000000101000000010000000000000000000000000000000000000000","title_slug":"maximum-average-subarray-i","has_notes":false,"flag_type":1}
{"id":1196060826,"question_id":643,"lang":"java","lang_name":"Java","time":"1Â month, 1Â week","timestamp":1709754291,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1196060826/","is_pending":"Not Pending","title":"Maximum Average Subarray I","memory":"56.5 MB","code":"class Solution {\n    public double findMaxAverage(int[] nums, int k) {\n        int n = nums.length;\n        if (k > n) return 0;\n        if (k == n) return (double) Arrays.stream(nums).sum() / k;\n\n        double sum = 0;\n        for (int i = 0; i < k; i++) {\n            sum += nums[i];\n        } \n        \n        double maxSum = sum;\n        int i = 0, j = k - 1;\n        while (j < n - 1) {\n            j++;\n            sum += nums[j] - nums[i];\n            maxSum = Math.max(maxSum, sum);\n            i++; // Increment i separately\n        }\n        \n        return maxSum / k;\n    }\n}\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-average-subarray-i","has_notes":false,"flag_type":1}
{"id":1196061960,"question_id":643,"lang":"java","lang_name":"Java","time":"1Â month, 1Â week","timestamp":1709754387,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1196061960/","is_pending":"Not Pending","title":"Maximum Average Subarray I","memory":"55.4 MB","code":"class Solution {\n    public double findMaxAverage(int[] nums, int k) {\n        int n = nums.length;\n        if (k > n) return 0;\n        \n        int sum = 0;\n        for (int i = 0; i < k; i++) {\n            sum += nums[i];\n        }\n        \n        int maxSum = sum;\n        for (int i = k; i < n; i++) {\n            sum += nums[i] - nums[i - k];\n            maxSum = Math.max(maxSum, sum);\n        }\n        \n        return (double) maxSum / k;\n    }\n}\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-average-subarray-i","has_notes":false,"flag_type":1}
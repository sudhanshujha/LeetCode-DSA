{"id":1206342143,"question_id":1499,"lang":"java","lang_name":"Java","time":"4 weeks, 1 day","timestamp":1710682801,"status":10,"status_display":"Accepted","runtime":"45 ms","url":"/submissions/detail/1206342143/","is_pending":"Not Pending","title":"Maximum Performance of a Team","memory":"58.8 MB","code":"class Solution {\n        public int maxPerformance(int n, int[] speed, int[] efficiency, int k) {\n        int[][] ess = new int[n][2];\n        for (int i = 0; i < n; ++i)\n            ess[i] = new int[] {efficiency[i], speed[i]};\n        Arrays.sort(ess, (a, b) -> b[0] - a[0]);\n        PriorityQueue<Integer> pq = new PriorityQueue<>(k, (a, b) -> a - b);\n        long res = 0, sumS = 0;\n        for (int[] es : ess) {\n            pq.add(es[1]);\n            sumS = (sumS + es[1]);\n            if (pq.size() > k) sumS -= pq.poll();\n            res = Math.max(res, (sumS * es[0]));\n        }\n        return (int) (res % (long)(1e9 + 7));\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"maximum-performance-of-a-team","has_notes":false,"flag_type":1}
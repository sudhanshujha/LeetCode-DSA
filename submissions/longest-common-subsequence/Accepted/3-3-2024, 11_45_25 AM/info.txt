{"id":1192357523,"question_id":1250,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1709446525,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/1192357523/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"50.9 MB","code":"class Solution {\n    public int longestCommonSubsequence(String text1, String text2) {\n        int m = text1.length();\n        int n = text2.length();\n        int dp[][] = new int[m+1][n+1];\n        for(int i=0; i<=m; i++){\n            dp[i][0] = 0;\n        }\n        for(int j=0; j<=n; j++){\n            dp[0][j] = 0;\n        }\n        for(int i=0; i<m; i++){\n            for(int j=0; j<n; j++){\n                if(text1.charAt(i)==text2.charAt(j))\n                    dp[i+1][j+1] = dp[i][j] + 1; \n                else\n                    dp[i+1][j+1] = Math.max(dp[i][j+1],dp[i+1][j]);\n            }\n        }  \n        return dp[m][n];  \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"longest-common-subsequence","has_notes":false,"flag_type":1}
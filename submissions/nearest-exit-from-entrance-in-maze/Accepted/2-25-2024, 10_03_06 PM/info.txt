{"id":1185931883,"question_id":2038,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1708878786,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1185931883/","is_pending":"Not Pending","title":"Nearest Exit from Entrance in Maze","memory":"45.4 MB","code":"import java.util.LinkedList;\nimport java.util.Queue;\n\nclass Solution {\n    public int nearestExit(char[][] maze, int[] entrance) {\n        int rows = maze.length, cols = maze[0].length;\n        int[][] dirs = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}}; // Directions: right, down, left, up\n        \n        Queue<int[]> queue = new LinkedList<>();\n        queue.offer(new int[]{entrance[0], entrance[1], 0}); // Add entrance cell to the queue with initial distance 0\n        maze[entrance[0]][entrance[1]] = '+'; // Mark entrance as visited\n        \n        while (!queue.isEmpty()) {\n            int[] cell = queue.poll(); // Dequeue the cell\n            int x = cell[0], y = cell[1], distance = cell[2]; // Extract cell coordinates and distance\n            \n            // Explore neighbors in all four directions\n            for (int[] dir : dirs) {\n                int nx = x + dir[0], ny = y + dir[1]; // Calculate new coordinates\n                // Check if the new coordinates are within the maze boundaries and the cell is empty\n                if (nx >= 0 && nx < rows && ny >= 0 && ny < cols && maze[nx][ny] == '.') {\n                    // If the exit is found and it's not the entrance, return the distance\n                    if ((nx == 0 || nx == rows - 1 || ny == 0 || ny == cols - 1) && (nx != entrance[0] || ny != entrance[1])) \n                        return distance + 1;\n                    maze[nx][ny] = '+'; // Mark the cell as visited\n                    queue.offer(new int[]{nx, ny, distance + 1}); // Enqueue the neighboring cell with increased distance\n                }\n            }\n        }\n        return -1; // No exit found\n    }\n}\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"nearest-exit-from-entrance-in-maze","has_notes":false,"flag_type":1}
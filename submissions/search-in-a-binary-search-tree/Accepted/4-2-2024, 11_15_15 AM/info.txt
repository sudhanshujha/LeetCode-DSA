{"id":1220818268,"question_id":783,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1712036715,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1220818268/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"45.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode searchBST(TreeNode root, int val) {\n    if(root==null)\n        return null;\n    if(root.val==val)   \n        return root;\n    else if(root.val>val)   \n    //go to left subtree\n        return searchBST(root.left,val);\n    else \n    // go to right subtree\n        return searchBST(root.right,val);\n    }\n}\n","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree","has_notes":false,"flag_type":1}
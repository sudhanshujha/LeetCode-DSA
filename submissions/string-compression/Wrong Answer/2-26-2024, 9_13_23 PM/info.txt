{"id":1186860577,"question_id":443,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1708962203,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1186860577/","is_pending":"Not Pending","title":"String Compression","memory":"N/A","code":"import java.util.HashMap;\n\nclass Solution {\n    public int compress(char[] chars) {\n        if(chars.length == 1)\n            return 1;\n        \n        // Create a HashMap to store count of each unique characters\n        HashMap<Character, Integer> charCount = new HashMap<>();\n        \n        // Count the occurrence of each character in the array\n        for(char c : chars) {\n            charCount.put(c, charCount.getOrDefault(c, 0) + 1);\n        }\n        \n        // Update the chars array with characters and their counts\n        int index = 0;\n        for(char c : charCount.keySet()) {\n            chars[index++] = c;\n            int count = charCount.get(c);\n            if(count > 1) {\n                for(char digit : Integer.toString(count).toCharArray()) {\n                    chars[index++] = digit;\n                }\n            }\n        }\n        \n        // Return the new size of the array\n        return index;\n    }\n}\n","compare_result":"1110111111011100011110101000000000000000000000000000000000000000000000110000","title_slug":"string-compression","has_notes":false,"flag_type":1}
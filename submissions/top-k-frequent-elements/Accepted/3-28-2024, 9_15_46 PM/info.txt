{"id":1216499226,"question_id":347,"lang":"java","lang_name":"Java","time":"2 weeks, 4 days","timestamp":1711640746,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/1216499226/","is_pending":"Not Pending","title":"Top K Frequent Elements","memory":"48.8 MB","code":"class Solution {\n    public int[] topKFrequent(int[] nums, int k) {\n        \n        // Step 1: Count the frequency of each number\n        Map<Integer, Integer> frequencyMap = new HashMap<>();\n        for (int num : nums) {\n            frequencyMap.put(num, frequencyMap.getOrDefault(num, 0) + 1);\n        }\n\n        // Step 2: Sort the entry set by frequency in descending order\n        List<Map.Entry<Integer, Integer>> sortedEntries = new ArrayList<>(frequencyMap.entrySet());\n        sortedEntries.sort((entry1, entry2) -> entry2.getValue().compareTo(entry1.getValue()));\n\n        // Step 3: Add top k keys to the result array\n        int[] result = new int[k];\n        int index = 0;\n        for (Map.Entry<Integer, Integer> entry : sortedEntries) {\n            result[index++] = entry.getKey();\n            if (index == k) {\n                break;\n            }\n        }\n\n        return result;\n    }\n}","compare_result":"111111111111111111111","title_slug":"top-k-frequent-elements","has_notes":false,"flag_type":1}
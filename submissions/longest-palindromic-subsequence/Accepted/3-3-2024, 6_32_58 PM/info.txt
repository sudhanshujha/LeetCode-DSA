{"id":1192640925,"question_id":516,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1709470978,"status":10,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/1192640925/","is_pending":"Not Pending","title":"Longest Palindromic Subsequence","memory":"44.6 MB","code":"class Solution {\n    public int longestPalindromeSubseq(String s) {\n        StringBuilder sr = new StringBuilder(s).reverse();\n        return longestCommonSubsequence(s, sr.toString());\n    }\n    public int longestCommonSubsequence(String text1, String text2) {\n        int m = text1.length(), n = text2.length();\n        int[] prev = new int[n+1];\n        int[] curr;\n        for(int i=1; i<m+1; i++){\n            curr = new int[n+1];\n            for(int j=1; j<n+1; j++){\n                if(text1.charAt(i-1)== text2.charAt(j-1)) curr[j] = 1+prev[j-1];\n                else curr[j]  =  Math.max(prev[j], curr[j-1]);\n            }\n            prev = curr;\n        }\n        return prev[n];\n    }\n\n}\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-subsequence","has_notes":false,"flag_type":1}
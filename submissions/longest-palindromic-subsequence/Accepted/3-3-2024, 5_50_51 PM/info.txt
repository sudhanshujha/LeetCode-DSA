{"id":1192612999,"question_id":516,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1709468451,"status":10,"status_display":"Accepted","runtime":"78 ms","url":"/submissions/detail/1192612999/","is_pending":"Not Pending","title":"Longest Palindromic Subsequence","memory":"55.4 MB","code":"class Solution {\n    public int longestPalindromeSubseq(String s) {\n        StringBuilder sr = new StringBuilder(s).reverse();\n        int n = s.length();\n        int dp[][] = new int[n+1][n+1];\n\n        for(int i=0; i<n; i++){\n            for(int j=0; j<n; j++){\n                if(s.charAt(i)==sr.charAt(j)){\n                    dp[i+1][j+1] = dp[i][j]+1;  \n                }\n                else\n                {\n                    dp[i+1][j+1] = Math.max(dp[i+1][j],dp[i][j+1]);  \n                }\n            }\n        }\n        return dp[n][n];\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-subsequence","has_notes":false,"flag_type":1}
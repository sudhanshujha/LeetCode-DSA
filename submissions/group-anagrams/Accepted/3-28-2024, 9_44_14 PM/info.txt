{"id":1216522553,"question_id":49,"lang":"java","lang_name":"Java","time":"2 weeks, 4 days","timestamp":1711642454,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1216522553/","is_pending":"Not Pending","title":"Group Anagrams","memory":"47.5 MB","code":"class Solution {\n    public List<List<String>> groupAnagrams(String[] strs) {\n        Map<String, List<String>> map = new HashMap<>();\n        \n        for (String word : strs) {\n            char[] chars = word.toCharArray();\n            Arrays.sort(chars);\n            String sortedWord = new String(chars);\n            // if map does not contain the key\n            if (!map.containsKey(sortedWord)) {\n                map.put(sortedWord, new ArrayList<>());\n            }\n            // if map contains the key\n            map.get(sortedWord).add(word);\n        }\n        \n        return new ArrayList<>(map.values());\n    }\n}\n// {\n//   \"aet\": [\"eat\", \"tea\", \"ate\"],\n//   \"ant\": [\"tan\", \"nat\"],\n//   \"abt\": [\"bat\"]\n// }","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams","has_notes":false,"flag_type":1}
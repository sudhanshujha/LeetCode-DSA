{"id":1205190374,"question_id":948,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1710588387,"status":10,"status_display":"Accepted","runtime":"119 ms","url":"/submissions/detail/1205190374/","is_pending":"Not Pending","title":"Sort an Array","memory":"69 MB","code":"class Solution {\npublic:\n    \n    void maxHeapify(vector<int>& nums, int n, int i)\n    {\n        int largest = i;\n        int l = 2 * i + 1;\n        int r = 2 * i + 2;\n        \n        if(l<n && nums[l] > nums[largest])\n            largest = l;\n        if(r<n && nums[r] > nums[largest])\n            largest = r;\n        \n        if(largest != i)\n        {\n            swap(nums[largest], nums[i]);\n            maxHeapify(nums,n,largest);\n        }\n    }\n    \n    void buildHeap(vector<int>& nums, int n)\n    {\n        for(int i=(n-2)/2;i>=0;i--)\n            maxHeapify(nums,n,i);\n    }\n    \n    void heapSort(vector<int>& nums, int n)\n    {\n        buildHeap(nums,n);\n        \n        for(int i=n-1;i>=1;i--)\n        {\n            swap(nums[0],nums[i]);\n            maxHeapify(nums,i,0);\n        }\n    }\n    \n    vector<int> sortArray(vector<int>& nums) {\n        \n        heapSort(nums,nums.size());\n        \n        return nums;\n    }\n};","compare_result":"111111111111111111111","title_slug":"sort-an-array","has_notes":false,"flag_type":1}
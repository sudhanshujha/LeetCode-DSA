{"id":1202380730,"question_id":17,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1710321494,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1202380730/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"42.7 MB","code":"import java.util.*;\n\nclass Solution {\n    public List<String> letterCombinations(String digits) {\n        List<String> result = new ArrayList<>();\n        if (digits == null || digits.length() == 0) return result;\n        \n        String[] mappings = {\"abc\", \"def\", \"ghi\", \"jkl\", \"mno\", \"pqrs\", \"tuv\", \"wxyz\"};\n        result.add(\"\");\n        \n        for (char digit : digits.toCharArray()) {\n            int size = result.size();\n            String letters = mappings[digit - '2'];\n            while (size-- > 0) {\n                String prefix = result.remove(0);\n                for (char letter : letters.toCharArray()) {\n                    result.add(prefix + letter);\n                }\n            }\n        }\n        \n        return result;\n    }\n}\n","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number","has_notes":false,"flag_type":1}
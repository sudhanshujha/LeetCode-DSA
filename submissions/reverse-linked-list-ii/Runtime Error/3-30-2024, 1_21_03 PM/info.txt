{"id":1217972452,"question_id":92,"lang":"java","lang_name":"Java","time":"2 weeks, 3 days","timestamp":1711785063,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1217972452/","is_pending":"Not Pending","title":"Reverse Linked List II","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseBetween(ListNode head, int left, int right) {\n        ListNode temp = head;\n        if(head.next == null)\n            return head;\n        while(temp.val != left)\n            temp = temp.next;\n        // point l-> left ptr to left node\n        ListNode l = temp;\n        while(temp.val != right)\n            temp = temp.next;\n        // swapping of left & rightvalues\n        int x = l.val;\n        l.val = temp.val;\n        temp.val = x;\n        return head;\n    }\n}","compare_result":"11000000000000000000000000000000000000000000","title_slug":"reverse-linked-list-ii","has_notes":false,"flag_type":1}
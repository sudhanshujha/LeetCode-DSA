{"id":1217976726,"question_id":92,"lang":"java","lang_name":"Java","time":"2 weeks, 3 days","timestamp":1711785514,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1217976726/","is_pending":"Not Pending","title":"Reverse Linked List II","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseBetween(ListNode head, int left, int right) {\n        ListNode temp = head;\n        int i = 1;\n        if(head.next == null)\n            return head;\n        while(i != left){\n            if(temp.next==null)\n                return head;\n            temp = temp.next;\n            i++;\n        }\n        // point l-> left ptr to left node\n        ListNode l = temp;\n        System.out.print(temp.val);\n        while(i != right){\n            if(temp.next==null)\n                return head;\n            temp = temp.next;\n            i++;\n        }\n        System.out.print(temp.val);\n        // swapping of left & rightvalues\n        int x = l.val;\n        l.val = temp.val;\n        temp.val = x;\n        return head;\n    }\n}","compare_result":"11111111111110000111111011110101010001000010","title_slug":"reverse-linked-list-ii","has_notes":false,"flag_type":1}
{"id":1213412468,"question_id":242,"lang":"java","lang_name":"Java","time":"3Â weeks","timestamp":1711366620,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1213412468/","is_pending":"Not Pending","title":"Valid Anagram","memory":"43.2 MB","code":"// class Solution {\n//     public boolean isAnagram(String s, String t) {\n//         // make char array & use that as hash map with count of each character\n//         // stack another way:     \n//         // set - not possible\n//         // HashMap<Character, Integer> h = new HashMap<>();\n//         int a[] = new int[26];\n//         int m = s.length();\n//         int n = t.length();\n//         for(int i = 0; i < 26; i++){\n//             a[i] = 0;\n//         }\n//         while(m > 0){\n//             a[(s.charAt(m)-'a')]++;\n//             m--;\n//         }\n//         while(n > 0){\n//             a[(s.charAt(n)-'a')]--;  \n//             n--;\n//         }\n//         for(int i = 0; i < 26; i++){\n//             if(a[i] == 1)\n//                 return false;\n//         }\n//         return true;\n//     }\n// }\n\nclass Solution {\n    public boolean isAnagram(String s, String t) {\n        int[] count = new int[26];\n        \n        // Count occurrences of each character in s\n        for (char c : s.toCharArray()) {\n            count[c - 'a']++;\n        }\n        \n        // Subtract occurrences of each character in t\n        for (char c : t.toCharArray()) {\n            count[c - 'a']--;\n        }\n        \n        // Check if all counts are 0\n        for (int i = 0; i < 26; i++) {\n            if (count[i] != 0) {\n                return false;\n            }\n        }\n        \n        return true;\n    }\n}\n","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"valid-anagram","has_notes":false,"flag_type":1}
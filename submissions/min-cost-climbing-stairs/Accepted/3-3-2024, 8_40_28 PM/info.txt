{"id":1192733211,"question_id":747,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1709478628,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1192733211/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"42.9 MB","code":"class Solution {\n    public int minCostClimbingStairs(int[] cost) {\n        int n = cost.length;\n        int dp[] = new int[n+1];\n        dp[0] = cost[0];\n        dp[1] = cost[1];\n        if(cost.length == 0)\n            return dp[0];\n        if(cost.length == 1)\n            return dp[1];\n        else{\n            for(int i=2;i<n;i++){\n                dp[i] = cost[i] + Math.min(dp[i-1],dp[i-2]);\n            }\n            return Math.min(dp[n-1],dp[n-2]);\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-climbing-stairs","has_notes":false,"flag_type":1}
{"id":1192736453,"question_id":747,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1709478899,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1192736453/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"42.7 MB","code":"class Solution {\n    public int minCostClimbingStairs(int[] cost) {\n        int n = cost.length;\n        if (n == 0) return 0;\n        if (n == 1) return cost[0];\n        \n        int prev1 = cost[0]; // Cost to reach the first staircase\n        int prev2 = cost[1]; // Cost to reach the second staircase\n        \n        for (int i = 2; i < n; i++) {\n            int currentCost = cost[i] + Math.min(prev1, prev2);\n            prev1 = prev2;\n            prev2 = currentCost;\n        }\n        \n        return Math.min(prev1, prev2); // Minimum cost to reach the top\n    }\n}\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-climbing-stairs","has_notes":false,"flag_type":1}
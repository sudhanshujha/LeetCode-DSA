{"id":1181690072,"question_id":1777,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1708495805,"status":10,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/1181690072/","is_pending":"Not Pending","title":"Determine if Two Strings Are Close","memory":"45.6 MB","code":"import java.util.*;\n\nclass Solution {\n    public boolean closeStrings(String word1, String word2) {\n        // Create two hashmaps to store the frequency of characters in word1 and word2\n        Map<Character, Integer> word1Map = new HashMap<>();\n        Map<Character, Integer> word2Map = new HashMap<>();\n\n        // Count the frequency of characters in word1\n        for (char c : word1.toCharArray()) {\n            word1Map.put(c, word1Map.getOrDefault(c, 0) + 1);\n        }\n\n        // Count the frequency of characters in word2\n        for (char c : word2.toCharArray()) {\n            word2Map.put(c, word2Map.getOrDefault(c, 0) + 1);\n        }\n\n        // Check if the sets of characters in both words are the same\n        if (!word1Map.keySet().equals(word2Map.keySet())) {\n            return false;\n        }\n\n        // Create two lists to store the frequencies of characters in word1 and word2\n        List<Integer> freq1 = new ArrayList<>(word1Map.values());\n        List<Integer> freq2 = new ArrayList<>(word2Map.values());\n\n        // Sort the frequency lists\n        Collections.sort(freq1);\n        Collections.sort(freq2);\n\n        // Check if the frequency lists are equal\n        return freq1.equals(freq2);\n    }\n}\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"determine-if-two-strings-are-close","has_notes":false,"flag_type":1}
{"id":1181686129,"question_id":1777,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1708495528,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1181686129/","is_pending":"Not Pending","title":"Determine if Two Strings Are Close","memory":"N/A","code":"import java.util.*;\n\nclass Solution {\n    public boolean closeStrings(String word1, String word2) {\n        // Create two hashmaps to store the frequency of characters in word1 and word2\n        Map<Character, Integer> word1Map = new HashMap<>();\n        Map<Character, Integer> word2Map = new HashMap<>();\n\n        // Count the frequency of characters in word1\n        for (char c : word1.toCharArray()) {\n            word1Map.put(c, word1Map.getOrDefault(c, 0) + 1);\n        }\n\n        // Count the frequency of characters in word2\n        for (char c : word2.toCharArray()) {\n            word2Map.put(c, word2Map.getOrDefault(c, 0) + 1);\n        }\n\n        // Check if the lengths of the two words are the same\n        if (word1.length() != word2.length()) {\n            return false;\n        }\n\n        // Check if the sets of characters in both words are the same\n        // If not, return false\n        if (!word1Map.keySet().equals(word2Map.keySet())) {\n            return false;\n        }\n\n        // Check if the sets of frequencies of characters in both words are the same\n        // If not, return false\n        if (!new HashSet<>(word1Map.values()).equals(new HashSet<>(word2Map.values()))) {\n            return false;\n        }\n\n        // If all conditions are satisfied, return true\n        return true;\n    }\n}\n","compare_result":"11111111111011111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"determine-if-two-strings-are-close","has_notes":false,"flag_type":1}
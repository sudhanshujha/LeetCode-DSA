{"id":1191464283,"question_id":838,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1709380149,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1191464283/","is_pending":"Not Pending","title":"Design Linked List","memory":"45.8 MB","code":"//Doubly linked list\nclass MyLinkedList {\n\n    private Node head;\n    private Node tail;\n    private int length = 0;\n\n    public MyLinkedList() {}\n    \n    public int get(int index) {\n        if (index >= length) return -1;\n        Node curr = head;\n        while (index-- > 0) {\n            curr = curr.next;\n            if (curr == null) return -1;\n        }\n        return curr.val;\n    }\n    \n    public void addAtHead(int val) {\n        Node curr = new Node(val);\n        if (length == 0) {\n            head = curr;\n            tail = curr;\n        } else {\n            curr.next = head;\n            head.prev = curr;\n            head = curr;\n        }\n        length++;\n    }\n    \n    public void addAtTail(int val) {\n        Node curr = new Node(val);\n        if (length == 0) {\n            head = curr;\n            tail = curr;\n        } else {\n            tail.next = curr;\n            curr.prev = tail;\n            tail = curr;\n        }\n        length++;\n    }\n    \n    public void addAtIndex(int index, int val) {\n\n        if (index > length) return;\n\n        if (index == 0) {\n            addAtHead(val);\n            return;\n        }\n\n        if (index == length) {\n            addAtTail(val);\n            return;\n        }\n        \n        Node newNode = new Node(val);\n        Node curr = head;\n        while (index-- > 0) {\n            curr = curr.next;\n        }\n        newNode.prev = curr.prev;\n        newNode.next = curr;\n        curr.prev.next = newNode;\n        curr.prev = newNode;\n        length++;        \n    }\n    \n    public void deleteAtIndex(int index) {\n        if (index >= length) return;\n\n        if (index == 0) {\n            head = head.next;\n            length--;\n            return;\n        }\n\n        if (index == length - 1) {\n            tail = tail.prev;\n            tail.next = null;\n            length--;\n            return;\n        }\n\n        Node curr = head;\n        while (index-- > 0) {\n            curr = curr.next;\n            if (curr == null) return;\n        }\n\n        curr.prev.next = curr.next;\n        curr.next.prev = curr.prev;\n        length--;        \n    }\n\n    private class Node {\n        int val;\n        Node prev;\n        Node next;\n        \n        private Node(int val) {\n            this.val = val;\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-linked-list","has_notes":false,"flag_type":1}
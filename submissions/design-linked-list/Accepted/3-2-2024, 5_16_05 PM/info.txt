{"id":1191462356,"question_id":838,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1709379965,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/1191462356/","is_pending":"Not Pending","title":"Design Linked List","memory":"45.6 MB","code":"class Node{\n    int value;\n    Node next = null;\n    public Node(int value){\n        this.value = value;\n    }\n}\n\nclass MyLinkedList {\n\n    Node head = null;\n    int size = 0;\n    public MyLinkedList() {\n        head = null;\n    }\n    \n    public int get(int index) {\n        if(index >= size || index < 0)return -1;\n        Node temp = head;\n        for(int i = 0;i<index;i++)\n           temp = temp.next;\n        return temp != null ? temp.value : 0; \n    }\n    \n    public void addAtHead(int val) {\n       Node newHead = new Node(val);\n       newHead.next = head;\n       head = newHead;\n       size++;\n    }\n    \n    public void addAtTail(int val) {\n        if(head == null){\n            head = new Node(val);\n        }else{\n           Node temp = head;\n           while(temp.next != null)\n             temp = temp.next;\n            temp.next = new Node(val);\n        }\n        size++;\n    }\n    \n    public void addAtIndex(int index, int val) {\n        if(index == size){\n            addAtTail(val);\n        }else if(index > size){\n            return;\n        }else{\n            Node newNode = new Node(val);\n            if(head == null ){\n                head = newNode;\n            }else if(index == 0){\n                newNode.next = head;\n               head = newNode;\n        }else{\n            Node current = head;\n            Node previous = null;\n            for(int i = 0;i<index;i++){\n                previous = current;\n                current = current.next;\n            }\n            newNode.next = current;\n            previous.next = newNode;\n        }\n        size++;\n        }\n    }\n    \n    public void deleteAtIndex(int index) {\n        if(index >= size || index < 0)return;\n        Node current = head;\n        Node previous = null;\n        for(int i = 0;i<index;i++){\n            previous = current;\n            current = current.next;\n        }\n        if(previous == null){\n            head = head.next;\n        }else {\n            previous.next = \n            current.next;\n        }\n        size--;\n    }\n}\n\n/**\n * Your MyLinkedList object will be instantiated and called as such:\n * MyLinkedList obj = new MyLinkedList();\n * int param_1 = obj.get(index);\n * obj.addAtHead(val);\n * obj.addAtTail(val);\n * obj.addAtIndex(index,val);\n * obj.deleteAtIndex(index);\n */","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-linked-list","has_notes":false,"flag_type":1}
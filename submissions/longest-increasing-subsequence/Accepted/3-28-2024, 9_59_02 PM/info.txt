{"id":1216535434,"question_id":300,"lang":"java","lang_name":"Java","time":"2 weeks, 4 days","timestamp":1711643342,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1216535434/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"44 MB","code":"public class Solution {\n    public int lengthOfLIS(int[] nums) {            \n        int[] dp = new int[nums.length];\n        int len = 0;\n\n        for(int x : nums) {\n            int i = Arrays.binarySearch(dp, 0, len, x);\n            if(i < 0) i = -(i + 1);\n            dp[i] = x;\n            if(i == len) len++;\n        }\n\n        return len;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":false,"flag_type":1}
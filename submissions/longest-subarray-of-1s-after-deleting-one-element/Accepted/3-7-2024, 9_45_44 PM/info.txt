{"id":1196841779,"question_id":1586,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1709828144,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1196841779/","is_pending":"Not Pending","title":"Longest Subarray of 1's After Deleting One Element","memory":"56.4 MB","code":"class Solution {\n    public int longestSubarray(int[] nums) {\n        int n = nums.length;\n        int maxOnes = 0;\n        int left = 0, right = 0;\n        int zeroCount = 0;\n\n        while (right < n) {\n            if (nums[right] == 0) {\n                zeroCount++;\n            }\n\n            while (zeroCount > 1) {\n                if (nums[left] == 0) {\n                    zeroCount--;\n                }\n                left++;\n            }\n\n            maxOnes = Math.max(maxOnes, right - left);\n            right++;\n        }\n\n        return maxOnes;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-subarray-of-1s-after-deleting-one-element","has_notes":false,"flag_type":1}
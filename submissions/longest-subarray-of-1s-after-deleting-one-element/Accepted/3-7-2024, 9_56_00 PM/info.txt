{"id":1196850667,"question_id":1586,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1709828760,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1196850667/","is_pending":"Not Pending","title":"Longest Subarray of 1's After Deleting One Element","memory":"56.9 MB","code":"class Solution {\n    public int longestSubarray(int[] nums) {\n        int left = 0;\n        int right = 0;\n        int maxOnes = 0;\n        int removedZero = 0;\n        \n        while (right < nums.length) {\n            if (nums[right] == 0) {\n                removedZero++;\n            }\n            \n            while (removedZero > 1) {\n                if (nums[left] == 0) {\n                    removedZero--;\n                }\n                left++;\n            }\n            \n            maxOnes = Math.max(maxOnes, right - left);\n            right++;\n        }\n        \n        return maxOnes;\n    }\n}\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-subarray-of-1s-after-deleting-one-element","has_notes":false,"flag_type":1}
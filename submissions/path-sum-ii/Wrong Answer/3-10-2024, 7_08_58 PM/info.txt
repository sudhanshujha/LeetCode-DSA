{"id":1199621705,"question_id":113,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1710077938,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1199621705/","is_pending":"Not Pending","title":"Path Sum II","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {\n        List<List<Integer>> SumArray = new ArrayList<>();\n        List<Integer> list = new ArrayList<>();\n        post(root, targetSum, SumArray, list);\n        return SumArray;\n    }\n    public static void post(TreeNode root, int targetSum, List<List<Integer>> SumArray, List<Integer> list) {\n        if(root == null)\n            return;\n        if(root.val <= targetSum){\n            list.add(root.val);\n            targetSum = targetSum - root.val;\n        }\n        else return;\n        if(targetSum == 0){\n           SumArray.add(new ArrayList<>(list));\n        }\n        post(root.left, targetSum, SumArray, list);\n        post(root.right, targetSum, SumArray, list);\n        list.remove(list.size()-1);\n    }\n}","compare_result":"1111111011101001101010101101011011110100101000011111010111011000101011010001011100111101010110110111100100110010001","title_slug":"path-sum-ii","has_notes":false,"flag_type":1}
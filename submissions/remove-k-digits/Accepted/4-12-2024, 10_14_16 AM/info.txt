{"id":1230056589,"question_id":402,"lang":"java","lang_name":"Java","time":"4 days, 4 hours","timestamp":1712897056,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1230056589/","is_pending":"Not Pending","title":"Remove K Digits","memory":"44.6 MB","code":"class Solution {\n    public String removeKdigits(String num, int k) {\n        // Monotonic stack approach\n        // If the upcoming digit is smaller than the previous one, remove the previous one\n        int n = num.length();\n        if (n == 0 || n <= k) return \"0\"; // Edge cases\n\n        StringBuilder stack = new StringBuilder();\n        for (char digit : num.toCharArray()) {\n            while (k > 0 && stack.length() > 0 && stack.charAt(stack.length() - 1) > digit) {\n                stack.deleteCharAt(stack.length() - 1);\n                k--;\n            }\n            stack.append(digit);\n        }\n\n        // If there are still remaining digits to remove, remove them from the end\n        while (k > 0 && stack.length() > 0) {\n            stack.deleteCharAt(stack.length() - 1);\n            k--;\n        }\n\n        // Remove leading zeros\n        while (stack.length() > 0 && stack.charAt(0) == '0') {\n            stack.deleteCharAt(0);\n        }\n\n        return stack.length() == 0 ? \"0\" : stack.toString();\n    }\n}\n","compare_result":"1111111111111111111111111111111111111111111","title_slug":"remove-k-digits","has_notes":false,"flag_type":1}
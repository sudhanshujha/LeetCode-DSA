{"id":1157172830,"question_id":102,"lang":"java","lang_name":"Java","time":"2 months, 3 weeks","timestamp":1706253273,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1157172830/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"45 MB","code":"class Solution {\n    public List<List<Integer>> levelOrder(TreeNode root) \n    {\n        List<List<Integer>>al=new ArrayList<>();\n        pre(root,0,al);\n        return al;\n    }\n    public static void pre(TreeNode root,int l,List<List<Integer>>al)\n    {\n        if(root==null)\n            return;\n        if(al.size()==l)\n        {\n            List<Integer>li=new ArrayList<>();\n            li.add(root.val);\n            al.add(li);\n        }\n        else\n            al.get(l).add(root.val);\n        pre(root.left,l+1,al);\n        pre(root.right,l+1,al);\n    } \n}","compare_result":"11111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}
{"id":1156842668,"question_id":102,"lang":"java","lang_name":"Java","time":"2 months, 3 weeks","timestamp":1706216409,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1156842668/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"44.9 MB","code":"// /**\n//  * Definition for a binary tree node.\n//  * public class TreeNode {\n//  *     int val;\n//  *     TreeNode left;\n//  *     TreeNode right;\n//  *     TreeNode() {}\n//  *     TreeNode(int val) { this.val = val; }\n//  *     TreeNode(int val, TreeNode left, TreeNode right) {\n//  *         this.val = val;\n//  *         this.left = left;\n//  *         this.right = right;\n//  *     }\n//  * }\n//  */\n\n// class Solution {\n//     public List<List<Integer>> levelOrder(TreeNode root) {\n//         List<List<Integer>> levelOrderList = new ArrayList<>();\n//         Queue<Node> queue = new LinkedList<>();\n\n//         while (!queue.isEmpty()) {\n//             int level = queue.size();\n//             List<Integer> ByLevel = new ArrayList<>();\n//             for(int i=0; i<=level;i++){\n//                 Node current = queue.poll(); // Remove the front of the queue\n//             }      \n           \n//             if (current.left != null) {\n//                 queue.add(current.left);\n//                 levelOrderList[lvl].add(current);\n//             }\n\n//             if (current.right != null) {\n//                 queue.add(current.right);\n//                 levelOrderList[lvl].add(current)\n//             }\n//         }\n        \n//     }\n\n// }\n\nclass Solution {\n    public List<List<Integer>> levelOrder(TreeNode root) {\n        Queue<TreeNode> q = new LinkedList<>();\n        List<List<Integer>> finalAns = new ArrayList<List<Integer>>();\n        if(root==null){\n            return finalAns;\n        }\n        q.add(root);\n        while(!q.isEmpty()){\n            int levels = q.size();\n            List<Integer> subLevels = new ArrayList<>();\n            for(int i=0;i<levels;i++){\n                if(q.peek().left!=null){\n                    q.add(q.peek().left);\n                }\n                if(q.peek().right!=null){\n                    q.add(q.peek().right);\n                }\n                subLevels.add(q.remove().val);\n            }\n            finalAns.add(subLevels);\n        }\n        return finalAns;\n    }\n}","compare_result":"11111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}
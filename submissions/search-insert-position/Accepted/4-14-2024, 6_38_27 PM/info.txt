{"id":1232217021,"question_id":35,"lang":"java","lang_name":"Java","time":"1 day, 20 hours","timestamp":1713100107,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1232217021/","is_pending":"Not Pending","title":"Search Insert Position","memory":"42.6 MB","code":"class Solution {\n    public int searchInsert(int[] nums, int target) {\n        // if found return the index if not then return\n        int left = 0, right = nums.length - 1, mid = left + (right-left)/2;\n        while (left <= right){\n            mid = left + (right-left)/2;\n            if(nums[mid]==target)\n                return mid;\n            else if(nums[mid]<target)\n                left = mid + 1;\n            else\n                right = mid - 1; \n        }\n        return left;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-insert-position","has_notes":false,"flag_type":1}
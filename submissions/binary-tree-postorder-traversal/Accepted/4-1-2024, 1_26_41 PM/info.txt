{"id":1219890671,"question_id":145,"lang":"java","lang_name":"Java","time":"2 weeks, 1 day","timestamp":1711958201,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1219890671/","is_pending":"Not Pending","title":"Binary Tree Postorder Traversal","memory":"41.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    List<Integer> arr = new ArrayList<>();\n    public List<Integer> postorderTraversal(TreeNode root) {        \n        if (root == null)\n            return Collections.emptyList(); // as return type is list\n    \n        postorderTraversal(root.left);\n        postorderTraversal(root.right);\n        arr.add(root.val);\n        \n        return arr;\n    }\n}\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-postorder-traversal","has_notes":false,"flag_type":1}
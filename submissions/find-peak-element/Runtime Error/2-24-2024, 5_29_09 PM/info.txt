{"id":1184776228,"question_id":162,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1708775949,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1184776228/","is_pending":"Not Pending","title":"Find Peak Element","memory":"N/A","code":"class Solution {\n    public int findPeakElement(int[] nums) {\n        int low = 0;\n        int size = nums.length-1;\n        int high = size;\n        int mid;\n\n        if(size==1) return 0;\n            //checking if first element is peak\n        if(nums[low]>nums[low+1])   return 0;\n            //checking if last element is peak element\n        if(nums[high]>nums[high-1])   return high;\n        \n        low++; high--;\n\n        while(low<=high){\n            mid = low + (high-low)/2;\n            \n            // base condition is if it is a peak element\n            if(nums[mid-1]<nums[mid] && nums[mid]>nums[mid+1])\n                return mid;\n            //else move to right to find peak if it is like 3 in 1,3,5\n            else if(nums[mid-1]<nums[mid])\n                low = mid+1;\n            else\n                high = mid-1;\n        }\n        return -1;\n        \n    }\n}","compare_result":"110000000000000000000000000000000000000000000000000000000000000000","title_slug":"find-peak-element","has_notes":false,"flag_type":1}
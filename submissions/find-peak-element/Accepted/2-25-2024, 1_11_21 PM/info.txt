{"id":1185573111,"question_id":162,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1708846881,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1185573111/","is_pending":"Not Pending","title":"Find Peak Element","memory":"41.7 MB","code":"class Solution {\n    public int findPeakElement(int[] nums) {\n        int n = nums.length;\n        int l = 0, r = n - 1;\n        int mid;\n\n        while (l <= r) {\n            mid = l + (r - l) / 2;\n\n            if (mid > 0 && nums[mid - 1] > nums[mid])\n                r = mid - 1;\n            else if (mid < n - 1 && nums[mid + 1] > nums[mid])\n                l = mid + 1;\n            else\n                return mid;\n        }\n        return -1;\n    }\n}\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-peak-element","has_notes":false,"flag_type":1}
{"id":1184760740,"question_id":162,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1708774276,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1184760740/","is_pending":"Not Pending","title":"Find Peak Element","memory":"42.2 MB","code":"class Solution {\n    public int findPeakElement(int[] nums) {\n        int low = 0;\n        int high = nums.length - 1;\n        int mid;\n\n        while (low < high) {\n            mid = low + (high - low) / 2;\n\n            // Check if mid is at the beginning or end of the array\n            if ((mid == 0 || nums[mid - 1] < nums[mid]) && (mid == nums.length - 1 || nums[mid] > nums[mid + 1])) {\n                return mid; // Found peak element\n            } else if (mid > 0 && nums[mid - 1] > nums[mid]) {\n                high = mid - 1; // Peak is on the left side\n            } else {\n                low = mid + 1; // Peak is on the right side\n            }\n        }\n\n        return low; // Return low or high (they are equal) as peak element\n    }\n}\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-peak-element","has_notes":true,"flag_type":1}
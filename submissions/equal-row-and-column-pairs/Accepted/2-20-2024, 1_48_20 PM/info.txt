{"id":1180750892,"question_id":2428,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1708417100,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/1180750892/","is_pending":"Not Pending","title":"Equal Row and Column Pairs","memory":"55.4 MB","code":"class Solution {\n  class Node {\n    Map<Integer, Node> next = new HashMap<>();\n    int cnt;\n  }\n\n  public int equalPairs(int[][] grid) {\n    int n = grid.length, ans = 0;\n    var root = new Node();\n\n    for (var row : grid) {\n      var ptr = root;\n\n      for (var val : row) {\n        if (ptr.next.containsKey(val))\n          ptr = ptr.next.get(val);\n        else {\n          var newNode = new Node();\n          ptr.next.put(val, newNode);\n          ptr = newNode;\n        }\n      }\n      ptr.cnt++;\n    }\n    for (var i=0; i<n; i++) {\n      var ptr = root;\n\n      for (var j=0; j<n; j++) {\n        if (ptr.next.containsKey(grid[j][i]))\n          ptr = ptr.next.get(grid[j][i]);\n        else break;\n      }\n      ans += ptr.cnt;\n    }\n    return ans;\n  }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"equal-row-and-column-pairs","has_notes":true,"flag_type":1}
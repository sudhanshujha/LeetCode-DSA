{"id":1181017650,"question_id":2428,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1708439384,"status":10,"status_display":"Accepted","runtime":"39 ms","url":"/submissions/detail/1181017650/","is_pending":"Not Pending","title":"Equal Row and Column Pairs","memory":"50.5 MB","code":"\nclass Solution {\n    //  TC O(m*n)\n\n    public int equalPairs(int[][] grid) {\n        int n = grid.length, ans = 0, idx = 0 ;\n        Map<String, Integer> rowHash = new HashMap<>();\n        Map<String, Integer> colHash = new HashMap<>();\n\n        for(int[] row: grid){ // Calculate hash of each row\n            StringBuilder sb = new StringBuilder();\n            for(int i : row){\n                sb.append(i).append(\"#\");\n            }\n            rowHash.put(sb.toString(), rowHash.getOrDefault(sb.toString(), 0)+1);\n        }\n        for(int j=0; j<n; j++){  // Calculate hash of each col\n            StringBuilder sb = new StringBuilder();\n            for(int i=0; i<n; i++){\n                sb.append(grid[i][j]).append(\"#\");\n            }\n\n            colHash.put(sb.toString(), colHash.getOrDefault(sb.toString(), 0)+1);\n\n        }\n\n        for(Map.Entry<String, Integer> entry : rowHash.entrySet()){\n            String rHash = entry.getKey();\n            if(colHash.containsKey(rHash)){\n                ans += colHash.get(rHash) * rowHash.get(rHash);\n            }\n        }\n        return ans;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"equal-row-and-column-pairs","has_notes":false,"flag_type":1}
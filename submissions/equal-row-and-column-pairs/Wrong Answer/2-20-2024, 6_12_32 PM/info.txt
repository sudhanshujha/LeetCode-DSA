{"id":1180932413,"question_id":2428,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1708432952,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1180932413/","is_pending":"Not Pending","title":"Equal Row and Column Pairs","memory":"N/A","code":"import java.util.*;\n\nclass Solution {\n        int count = 0;\n\n    public int equalPairs(int[][] grid) {\n        // Create a hashmap to store occurrences of rows and columns\n        Map<Integer, Integer> rowMap = new HashMap<>();\n        Map<Integer, Integer> colMap = new HashMap<>();\n\n        // Count occurrences of rows and columns\n        for (int[] row : grid) {\n            int rowHash = Arrays.hashCode(row);\n            rowMap.put(rowHash, rowMap.getOrDefault(rowHash, 0) + 1);\n        }\n\n        for (int j = 0; j < grid[0].length; j++) {\n            int[] col = new int[grid.length];\n            for (int i = 0; i < grid.length; i++) {\n                col[i] = grid[i][j];\n            }\n            int colHash = Arrays.hashCode(col);\n            colMap.put(colHash, colMap.getOrDefault(colHash, 0) + 1);\n        }\n\n        // // Print keys and values\n        // System.out.println(\"RowMap\");\n        // for (int key : rowMap.keySet()) {\n        //     System.out.println(\"key: \" + key + \" value: \" + rowMap.get(key));\n        // }\n\n        // System.out.println(\"ColMap\");\n        // for (int key : colMap.keySet()) {\n        //     System.out.println(\"key: \" + key + \" value: \" + colMap.get(key));\n        // }\n\n\n        for (int key : rowMap.keySet()) {\n            if (colMap.containsKey(key)) {\n                count += rowMap.get(key)*colMap.get(key);\n            }\n        }\n\n        return count;\n    }\n\n}\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111101111111","title_slug":"equal-row-and-column-pairs","has_notes":false,"flag_type":1}
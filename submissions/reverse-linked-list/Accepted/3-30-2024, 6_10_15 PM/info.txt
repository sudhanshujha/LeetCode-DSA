{"id":1218139375,"question_id":206,"lang":"java","lang_name":"Java","time":"2 weeks, 2 days","timestamp":1711802415,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1218139375/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"42.2 MB","code":"// Solve using recursion\nclass Solution {\n    public ListNode reverseList(ListNode head) {\n        ListNode prev = null, curr = head;\n        return solve (head, prev, curr);\n    }\n    public static ListNode solve (ListNode head, ListNode prev, ListNode curr){\n        \n        // base\n        if(curr == null){\n            return prev;\n        }\n\n        // swap link bw prev & curr\n            ListNode temp = curr.next;\n            curr.next = prev;\n            prev = curr;\n            curr = temp;\n            \n        // call for next link\n        return solve (head, prev, curr);\n    }   \n}","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"flag_type":1}
{"id":1218124497,"question_id":206,"lang":"java","lang_name":"Java","time":"2 weeks, 2 days","timestamp":1711800843,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1218124497/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"42.6 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseList(ListNode head) {\n        ListNode prev = null; // Initialize previous node\n        ListNode curr = head; // Start from the head of the list\n        ListNode temp;\n        // Traverse the list, reversing the pointers\n        while (curr != null) {\n            temp = curr.next; // Store the next node\n            curr.next = prev; // Reverse the pointer\n            prev = curr; // Move previous to current\n            curr = temp; // Move current to next\n        }\n\n        head = prev; // Update the head of the list\n        return head;\n    }\n}\n","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"flag_type":1}
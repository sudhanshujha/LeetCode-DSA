{"id":1200568761,"question_id":235,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1710165384,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1200568761/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\n\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n    return (root.val - p.val) * (root.val - q.val) < 1 ? root :\n           lowestCommonAncestor(p.val < root.val ? root.left : root.right, p, q);\n}\n}","compare_result":"111111111111111111111111111101","title_slug":"lowest-common-ancestor-of-a-binary-search-tree","has_notes":false,"flag_type":1}
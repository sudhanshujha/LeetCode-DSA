{"id":1181751190,"question_id":1116,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1708500007,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1181751190/","is_pending":"Not Pending","title":"Maximum Level Sum of a Binary Tree","memory":"47.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int maxLevelSum(TreeNode root) {\n        if(root == null) return 1;\n        Queue<TreeNode> q = new LinkedList<>();\n        q.add(root);\n        int level = 0, ans = 0, sum = Integer.MIN_VALUE;\n        while(!q.isEmpty()){\n            int size = q.size();\n            int max = 0;\n            for(int i = 0; i < size; i++){\n                TreeNode curr = q.poll();\n                max = max + curr.val;\n                if(curr.left != null){\n                    q.add(curr.left);\n                }\n                if(curr.right != null){\n                    q.add(curr.right);\n                }\n            }\n            level++;\n            if(max > sum){\n                ans = level;\n                sum = max;\n            }\n        }\n        return ans;\n    }\n}","compare_result":"11111111111111111111111111111111111111111","title_slug":"maximum-level-sum-of-a-binary-tree","has_notes":false,"flag_type":1}
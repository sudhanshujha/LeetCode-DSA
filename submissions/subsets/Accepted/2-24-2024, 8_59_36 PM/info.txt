{"id":1184914674,"question_id":78,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1708788576,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1184914674/","is_pending":"Not Pending","title":"Subsets","memory":"42.6 MB","code":"import java.util.*;\n\nclass Solution {\n    public List<List<Integer>> subsets(int[] nums) {\n        List<List<Integer>> result = new ArrayList<>();\n        List<Integer> currentSubset = new ArrayList<>();\n        backtrack(nums, 0, currentSubset, result);\n        return result;\n    }\n    \n    private void backtrack(int[] nums, int index, List<Integer> currentSubset, List<List<Integer>> result) {\n        // Add the current subset to the result\n        result.add(new ArrayList<>(currentSubset));\n        \n        // Generate subsets by considering elements starting from the given index\n        for (int i = index; i < nums.length; i++) {\n            // Include the current element in the subset\n            currentSubset.add(nums[i]);\n            \n            // Recursively generate subsets with the current element included\n            backtrack(nums, i + 1, currentSubset, result);\n            \n            // Exclude the current element from the subset (backtrack)\n            currentSubset.remove(currentSubset.size() - 1);\n        }\n    }\n}\n","compare_result":"1111111111","title_slug":"subsets","has_notes":false,"flag_type":1}
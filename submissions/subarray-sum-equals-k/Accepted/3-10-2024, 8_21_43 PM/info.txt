{"id":1199676111,"question_id":560,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1710082303,"status":10,"status_display":"Accepted","runtime":"25 ms","url":"/submissions/detail/1199676111/","is_pending":"Not Pending","title":"Subarray Sum Equals K","memory":"46.5 MB","code":"class Solution {\n    public int subarraySum(int[] nums, int k) {\n        Map<Integer, Integer> map = new HashMap<>();\n        map.put(0, 1); // Initialize with 0 sum frequency as 1\n        int sum = 0;\n        int count = 0;\n        \n        for (int num : nums) {\n            sum += num;\n            int complement = sum - k;\n            if (map.containsKey(complement)) {\n                count += map.get(complement);\n            }\n            map.put(sum, map.getOrDefault(sum, 0) + 1);\n        }\n        \n        return count;\n    }\n}\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subarray-sum-equals-k","has_notes":false,"flag_type":1}
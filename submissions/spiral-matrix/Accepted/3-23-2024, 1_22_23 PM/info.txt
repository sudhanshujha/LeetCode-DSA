{"id":1211478456,"question_id":54,"lang":"java","lang_name":"Java","time":"3 weeks, 3 days","timestamp":1711180343,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1211478456/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"41.1 MB","code":"class Solution {\n    public List<Integer> spiralOrder(int[][] matrix) {\n        List<Integer> spiralOrder = new ArrayList<>();\n        if (matrix == null || matrix.length == 0 || matrix[0].length == 0) {\n            return spiralOrder;\n        }\n        \n        int top = 0, bottom = matrix.length - 1, left = 0, right = matrix[0].length - 1;\n        \n        while (top <= bottom && left <= right) {\n            // left to right\n            for (int j = left; j <= right; j++) {\n                spiralOrder.add(matrix[top][j]);\n            }\n            top++;\n            \n            // top to bottom\n            for (int i = top; i <= bottom; i++) {\n                spiralOrder.add(matrix[i][right]);\n            }\n            right--;\n            \n            // right to left\n            if (top <= bottom) {\n                for (int j = right; j >= left; j--) {\n                    spiralOrder.add(matrix[bottom][j]);\n                }\n                bottom--;\n            }\n            \n            // bottom to top\n            if (left <= right) {\n                for (int i = bottom; i >= top; i--) {\n                    spiralOrder.add(matrix[i][left]);\n                }\n                left++;\n            }\n        }\n        return spiralOrder;\n    }\n}\n","compare_result":"1111111111111111111111111","title_slug":"spiral-matrix","has_notes":false,"flag_type":1}
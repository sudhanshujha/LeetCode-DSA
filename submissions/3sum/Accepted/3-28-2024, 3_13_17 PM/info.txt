{"id":1216246284,"question_id":15,"lang":"java","lang_name":"Java","time":"2 weeks, 4 days","timestamp":1711618997,"status":10,"status_display":"Accepted","runtime":"837 ms","url":"/submissions/detail/1216246284/","is_pending":"Not Pending","title":"3Sum","memory":"51.9 MB","code":"class Solution {\n     public  List<List<Integer>> threeSum(int[] nums) {\n        \n        // res = result\n        Set<List<Integer>> res  = new HashSet<>();\n        int n = nums.length;\n\n        // if array size is zero\n        if (n==0) return new ArrayList<>(res);\n        // sort it for using 2 ptr\n        Arrays.sort(nums);\n\n        for(int i = 0; i<n-2; i++){\n            int j = i + 1;    // i should be different from j\n            int k = n - 1;\n            while (j < k){\n                int sum = nums[i] + nums[j] + nums[k];\n                if (sum == 0) res.add(Arrays.asList(nums[i], nums[j++], nums[k--]));\n                else if (sum > 0) k--;\n                else if (sum < 0) j++;\n            }\n        }\n        return new ArrayList<>(res);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum","has_notes":false,"flag_type":1}
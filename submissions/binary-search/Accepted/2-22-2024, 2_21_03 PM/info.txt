{"id":1182852825,"question_id":792,"lang":"java","lang_name":"Java","time":"1Â month, 3Â weeks","timestamp":1708591863,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1182852825/","is_pending":"Not Pending","title":"Binary Search","memory":"45.9 MB","code":"class Solution {\n    public int search(int[] nums, int target) {\n        return search(nums, target, 0, nums.length - 1);\n    }\n    \n    private int search(int[] nums, int target, int left, int right) {\n        if (left > right) {\n            return -1; // Base case: target not found\n        }\n        \n        int mid = left + (right - left) / 2;\n        \n        if (nums[mid] == target) {\n            return mid; // Base case: target found\n        } else if (nums[mid] < target) {\n            return search(nums, target, mid + 1, right); // Search right half\n        } else {\n            return search(nums, target, left, mid - 1); // Search left half\n        }\n    }\n}\n","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"binary-search","has_notes":false,"flag_type":1}
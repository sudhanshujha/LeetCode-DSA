{"id":1157254518,"question_id":94,"lang":"java","lang_name":"Java","time":"2 months, 3 weeks","timestamp":1706260794,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1157254518/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"41.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<Integer> inorderTraversal(TreeNode root) {\n        List<Integer> res = new ArrayList<>();\n        helper(root, res);\n        return res;\n    }\n\n    public void helper(TreeNode root, List<Integer> res) {\n        if (root != null) {\n            helper(root.left, res);\n            res.add(root.val);\n            helper(root.right, res);\n        }\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal","has_notes":false,"flag_type":1}
{"id":1227616557,"question_id":76,"lang":"java","lang_name":"Java","time":"6 days, 21 hours","timestamp":1712665884,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1227616557/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"44.4 MB","code":"import java.util.Arrays;\n\nclass Solution {\n    public String minWindow(String s, String t) {\n        int[] map = new int[128];\n        Arrays.fill(map, 0);\n        for (char c : t.toCharArray()) {\n            map[c]++;\n        }\n        \n        int counter = t.length();\n        int begin = 0, end = 0, d = Integer.MAX_VALUE, head = 0;\n        \n        while (end < s.length()) {\n            if (map[s.charAt(end++)]-- > 0) {\n                counter--; // in t\n            }\n            while (counter == 0) { // valid\n                if (end - begin < d) {\n                    d = end - (head = begin);\n                }\n                if (map[s.charAt(begin++)]++ == 0) {\n                    counter++; // make it invalid\n                }\n            }\n        }\n        \n        return d == Integer.MAX_VALUE ? \"\" : s.substring(head, head + d);\n    }\n}\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-window-substring","has_notes":false,"flag_type":1}
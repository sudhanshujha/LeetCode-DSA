{"id":1187595604,"question_id":39,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1709028128,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1187595604/","is_pending":"Not Pending","title":"Combination Sum","memory":"44.6 MB","code":"class Solution {\n    public List<List<Integer>> combinationSum(int[] candidates, int target) {\n        List <List<Integer>> op = new ArrayList<>();\n        helper(0, candidates, target, new ArrayList<>(), op);\n        return op;\n    }\n\n    public static void helper(int index, int[] candidates, int target, List<Integer> ds,List<List<Integer>> op){\n        //base\n        if(index==candidates.length){\n            if(target==0){\n                op.add(new ArrayList<>(ds));\n            }\n            return;\n        }\n        // included \n        if(candidates[index] <= target){\n            ds.add(candidates[index]);\n            helper(index, candidates, target - candidates[index], ds, op);\n            ds.remove(ds.size() - 1);\n            // ds.clear();  Won't this will clear the op me add hua wala pehla ds also as java works by reference\n        }\n        helper(index+1, candidates, target, ds, op);\n    }\n}\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":true,"flag_type":1}
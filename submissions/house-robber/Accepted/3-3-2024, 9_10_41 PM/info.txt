{"id":1192755258,"question_id":198,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1709480441,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1192755258/","is_pending":"Not Pending","title":"House Robber","memory":"41.2 MB","code":"class Solution {\n    public int rob(int[] nums) {\n        int n = nums.length;\n        if (n == 0) return 0;\n        if (n == 1) return nums[0];\n        \n        int prev1 = nums[0]; // Maximum amount that can be robbed up to and including the first house\n        int prev2 = Math.max(nums[0], nums[1]); // Maximum amount that can be robbed up to and including the second house\n        \n        for (int i = 2; i < n; i++) {\n            int currentMax = Math.max(prev1 + nums[i], prev2);\n            prev1 = prev2;\n            prev2 = currentMax;\n        }\n        \n        return prev2; // Maximum amount that can be robbed up to and including the last house\n    }\n}\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"house-robber","has_notes":false,"flag_type":1}
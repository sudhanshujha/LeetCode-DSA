{"id":1185799569,"question_id":871,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1708868118,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1185799569/","is_pending":"Not Pending","title":"Keys and Rooms","memory":"44.5 MB","code":"class Solution {\n    public boolean canVisitAllRooms(List<List<Integer>> rooms) {\n        ArrayList<Integer> op = new ArrayList<>();\n        ArrayList<Integer> keys = new ArrayList<>();\n        int[] visited = new int[rooms.size()];\n        //.size()used for list & length for arraylist\n        helper(visited,op,0,rooms);\n        return op.size()==rooms.size();\n    }\n    public void helper(int[] visited, ArrayList<Integer> op, int currNode,List<List<Integer>> rooms){\n       op.add(currNode);\n       visited[currNode] = 1;\n       for(int key: rooms.get(currNode)){\n           if(visited[key]!=1)  helper(visited,op,key,rooms);\n       }\n    }\n}\n\n// public ArrayList<Integer> dfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {\n//         // Code here\n//         ArrayList<Integer> op = new ArrayList<>();\n//         int[] visited = new int[V];\n//         helper(adj, visited, op, 0);\n//         return op;\n//     }\n//     \n// public void helper(ArrayList<ArrayList<Integer>> adjList, int[] visited, ArrayList<Integer> op, int currNode){\n//         op.add(currNode);\n//         visited[currNode] = 1;\n//         for(int adjNode: adjList.get(currNode)){\n//             if(visited[adjNode]!=1) helper(adjList, visited, op, adjNode);\n//         }\n//     }","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"keys-and-rooms","has_notes":false,"flag_type":1}